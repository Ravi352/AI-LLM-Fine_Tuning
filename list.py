{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"list.py","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyOaLGlQ5zKCbYJg3ql6Thy6"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"8r2BtQmW27gp","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1615099506063,"user_tz":-330,"elapsed":12745,"user":{"displayName":"ravi kumar","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gju4cvqbDPjuSdTYgNrPVlIFSWI3552bscI6noBuE4=s64","userId":"12176873388585538917"}},"outputId":"e209dda7-7181-4b31-b61d-7841375cc1f6"},"source":["#creating two empty list \r\n","my_unique=[]\r\n","my_left_over=[]\r\n","## asking user to enter the value or things he/she wants to add in the list\r\n","n= int(input(\"Enter the number of elements you want to enter in the list  \"))\r\n","# statement for entering the variable\r\n","for i in range (1,n+1):\r\n","   add=input(f\"Enter the things you want to add in the list: {i}  \")\r\n","   ## calling a function and add all the input into the function\r\n","   addlist(add)\r\n","  #my_unique.append(add)# this line is not good as it appending everything in the list \r\n","  # making function with condition and checking the what should go in the unique list and what should go in the left over list\r\n","def addlist(x):\r\n","  tf= x in my_unique\r\n","  print(my_unique)\r\n","  if not tf:\r\n","      my_unique.append(x)\r\n","  if tf:\r\n","      my_left_over.append(x)"],"execution_count":82,"outputs":[{"output_type":"stream","text":["Enter the number of elements you want to enter in the list  4\n","Enter the things you want to add in the list: 1  q\n","[]\n","Enter the things you want to add in the list: 2  w\n","['q']\n","Enter the things you want to add in the list: 3  q\n","['q', 'w']\n","Enter the things you want to add in the list: 4  r\n","['q', 'w']\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"g3hv_xSScCtf"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"FnzfJkcGcC72"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"JTC6XVVqcDHm"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"BociEPnFcDRG"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Ub02XH2ScBy3"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"1B8NZ_U62__Y","executionInfo":{"status":"ok","timestamp":1615096334375,"user_tz":-330,"elapsed":814,"user":{"displayName":"ravi kumar","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gju4cvqbDPjuSdTYgNrPVlIFSWI3552bscI6noBuE4=s64","userId":"12176873388585538917"}}},"source":[""],"execution_count":23,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":387},"id":"2uZypAZjb3fW","executionInfo":{"status":"error","timestamp":1615099590489,"user_tz":-330,"elapsed":22474,"user":{"displayName":"ravi kumar","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gju4cvqbDPjuSdTYgNrPVlIFSWI3552bscI6noBuE4=s64","userId":"12176873388585538917"}},"outputId":"1f453361-cf13-4d7f-94bc-ea2bcf59df96"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&redirect_uri=urn%3aietf%3awg%3aoauth%3a2.0%3aoob&scope=email%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdocs.test%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive.photos.readonly%20https%3a%2f%2fwww.googleapis.com%2fauth%2fpeopleapi.readonly%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive.activity.readonly%20https%3a%2f%2fwww.googleapis.com%2fauth%2fphotos.native&response_type=code\n","\n","Enter your authorization code:\n","list.ipynb\n"],"name":"stdout"},{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-d5df0069828e>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mgoogle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolab\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mdrive\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mdrive\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmount\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'/content/drive'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/google/colab/drive.py\u001b[0m in \u001b[0;36mmount\u001b[0;34m(mountpoint, force_remount, timeout_ms, use_metadata_server)\u001b[0m\n\u001b[1;32m    262\u001b[0m       \u001b[0mwrote_to_fifo\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    263\u001b[0m     \u001b[0;32melif\u001b[0m \u001b[0mcase\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;36m5\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 264\u001b[0;31m       \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'mount failed: invalid oauth code'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    265\u001b[0m     \u001b[0;32melif\u001b[0m \u001b[0mcase\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;36m6\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    266\u001b[0m       raise ValueError(\n","\u001b[0;31mValueError\u001b[0m: mount failed: invalid oauth code"]}]},{"cell_type":"code","metadata":{"id":"nql1HlvuCt7g","executionInfo":{"status":"ok","timestamp":1615099467674,"user_tz":-330,"elapsed":823,"user":{"displayName":"ravi kumar","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gju4cvqbDPjuSdTYgNrPVlIFSWI3552bscI6noBuE4=s64","userId":"12176873388585538917"}}},"source":[""],"execution_count":81,"outputs":[]},{"cell_type":"code","metadata":{"id":"8RlBvxN0DGxA","executionInfo":{"status":"ok","timestamp":1615099459256,"user_tz":-330,"elapsed":818,"user":{"displayName":"ravi kumar","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gju4cvqbDPjuSdTYgNrPVlIFSWI3552bscI6noBuE4=s64","userId":"12176873388585538917"}}},"source":[""],"execution_count":81,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qaIoPsV23Dge","executionInfo":{"status":"ok","timestamp":1615099315894,"user_tz":-330,"elapsed":20542,"user":{"displayName":"ravi kumar","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gju4cvqbDPjuSdTYgNrPVlIFSWI3552bscI6noBuE4=s64","userId":"12176873388585538917"}},"outputId":"80e437d4-e09a-403e-efd9-aae58d353d22"},"source":["\r\n","\r\n","\r\n"],"execution_count":79,"outputs":[{"output_type":"stream","text":["Enter the number of elements you want to enter in the list  4\n","Enter the things you want to add in the list: 1  r\n","[]\n","Enter the things you want to add in the list: 2  r\n","['r']\n","Enter the things you want to add in the list: 3  w\n","['r']\n","Enter the things you want to add in the list: 4  a\n","['r', 'w']\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UrtvmUa_PbgA","executionInfo":{"status":"ok","timestamp":1615099338116,"user_tz":-330,"elapsed":837,"user":{"displayName":"ravi kumar","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gju4cvqbDPjuSdTYgNrPVlIFSWI3552bscI6noBuE4=s64","userId":"12176873388585538917"}},"outputId":"db469335-d058-44a6-c2ae-f06992b816e4"},"source":["my_left_over\r\n"],"execution_count":80,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['r']"]},"metadata":{"tags":[]},"execution_count":80}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HrI6W4Cw6khc","executionInfo":{"status":"ok","timestamp":1615099345697,"user_tz":-330,"elapsed":858,"user":{"displayName":"ravi kumar","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gju4cvqbDPjuSdTYgNrPVlIFSWI3552bscI6noBuE4=s64","userId":"12176873388585538917"}},"outputId":"3bbf4b3a-6d8c-41ed-cd50-321004524ab4"},"source":["my_unique"],"execution_count":81,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['r', 'w', 'a']"]},"metadata":{"tags":[]},"execution_count":81}]},{"cell_type":"code","metadata":{"id":"2tMX4ww86lIJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1615098749515,"user_tz":-330,"elapsed":774,"user":{"displayName":"ravi kumar","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gju4cvqbDPjuSdTYgNrPVlIFSWI3552bscI6noBuE4=s64","userId":"12176873388585538917"}},"outputId":"e4438c83-0083-4093-9bf8-f2270e35e012"},"source":["type(addlist)"],"execution_count":71,"outputs":[{"output_type":"execute_result","data":{"text/plain":["function"]},"metadata":{"tags":[]},"execution_count":71}]},{"cell_type":"code","metadata":{"id":"Cel5jm35Yx8S"},"source":[""],"execution_count":null,"outputs":[]}]}